<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacego__to__point" kind="namespace" language="Python">
    <compoundname>go_to_point</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacego__to__point_1a91dbaab25e6080f6b5dbf82cac6ce75c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>int go_to_point::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <initializer>=  Point()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="43" column="1" bodyfile="scripts/go_to_point.py" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a98ce19d0c843fd1cb438e6630ae107c2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>go_to_point.result</definition>
        <argsstring></argsstring>
        <name>result</name>
        <initializer>= rt2_assignment1.msg.PositionResult()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="48" column="1" bodyfile="scripts/go_to_point.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a777e85f1b4d3c81f9e89a3318257eb22" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.lin_coef</definition>
        <argsstring></argsstring>
        <name>lin_coef</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="53" column="1" bodyfile="scripts/go_to_point.py" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a333f82df9f091269ae05380c2b6e9877" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.ang_coef</definition>
        <argsstring></argsstring>
        <name>ang_coef</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="57" column="1" bodyfile="scripts/go_to_point.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1ae444f19eb2019982432760ace036ce03" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.yaw_</definition>
        <argsstring></argsstring>
        <name>yaw_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="62" column="1" bodyfile="scripts/go_to_point.py" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1aa2d0ef255bcf5d5faf9ca2764730fb17" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="70" column="1" bodyfile="scripts/go_to_point.py" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a57b4090d0abcbcf0bfa2bcb9329d3036" prot="public" static="no" mutable="no">
        <type></type>
        <definition>go_to_point.pub_</definition>
        <argsstring></argsstring>
        <name>pub_</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="74" column="1" bodyfile="scripts/go_to_point.py" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a7315cd3eb4bfee0eb4c2681e9140575e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>go_to_point.velocity</definition>
        <argsstring></argsstring>
        <name>velocity</name>
        <initializer>= None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="79" column="1" bodyfile="scripts/go_to_point.py" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a67f95834f0959feb3facd17bc7fa2b38" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.yaw_precision_</definition>
        <argsstring></argsstring>
        <name>yaw_precision_</name>
        <initializer>=  math.pi / 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="84" column="1" bodyfile="scripts/go_to_point.py" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1af74ccf49164d0478ca8343e2031d5813" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.yaw_precision_2_</definition>
        <argsstring></argsstring>
        <name>yaw_precision_2_</name>
        <initializer>=  math.pi / 90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="85" column="1" bodyfile="scripts/go_to_point.py" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a6a1e4eb20ebd4fce0fc56b0ebfd7a8d5" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.dist_precision_</definition>
        <argsstring></argsstring>
        <name>dist_precision_</name>
        <initializer>=  0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="90" column="1" bodyfile="scripts/go_to_point.py" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a524106fc7667a0927951dfd89d52d6a7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.kp_a</definition>
        <argsstring></argsstring>
        <name>kp_a</name>
        <initializer>=  -3.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="94" column="1" bodyfile="scripts/go_to_point.py" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a7bc498652ca66932e704e738b50c297b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.kp_d</definition>
        <argsstring></argsstring>
        <name>kp_d</name>
        <initializer>=  0.2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="98" column="1" bodyfile="scripts/go_to_point.py" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1acb4e14986fafe5cb73bb8ad0c178869d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.ub_a</definition>
        <argsstring></argsstring>
        <name>ub_a</name>
        <initializer>=  0.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="102" column="1" bodyfile="scripts/go_to_point.py" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1afecad4058844db05d8321199e25b4498" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.lb_a</definition>
        <argsstring></argsstring>
        <name>lb_a</name>
        <initializer>=  -0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="106" column="1" bodyfile="scripts/go_to_point.py" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a16c473b9e717200c483d18e66b48152a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.ub_d</definition>
        <argsstring></argsstring>
        <name>ub_d</name>
        <initializer>=  0.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="110" column="1" bodyfile="scripts/go_to_point.py" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a9af800eec02eb94f70ee4ac6fbea1ecd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>go_to_point.server</definition>
        <argsstring></argsstring>
        <name>server</name>
        <initializer>= None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="115" column="1" bodyfile="scripts/go_to_point.py" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacego__to__point_1a36304a9f313b0579f7fc69fa01695524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.clbk_odom</definition>
        <argsstring>(msg)</argsstring>
        <name>clbk_odom</name>
        <param>
          <type>msg</type>
          <defname>msg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Callback to get the current position of the robot from an /odom message, type Odometry
Args:
    msg: Odometry type message</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="121" column="1" bodyfile="scripts/go_to_point.py" bodystart="121" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a31ee48e5cae36821049b572a96b7c8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.change_state</definition>
        <argsstring>(state)</argsstring>
        <name>change_state</name>
        <param>
          <type>state</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to change from a state to another in the go_to_point function
Args:
    state(int): int variable for the new state of the FSM</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="147" column="1" bodyfile="scripts/go_to_point.py" bodystart="147" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ac688bb56fa84763ea2edefc30cae032a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.normalize_angle</definition>
        <argsstring>(angle)</argsstring>
        <name>normalize_angle</name>
        <param>
          <type>angle</type>
          <defname>angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function for normalizing the angle between -pi and pi.
Args:
    angle(Float): the input angle
Returns:
    angle(Float): the normalized angle.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="161" column="1" bodyfile="scripts/go_to_point.py" bodystart="161" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a9c3011a3065fcbefcc1c5ad8c9979669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.fix_yaw</definition>
        <argsstring>(des_pos)</argsstring>
        <name>fix_yaw</name>
        <param>
          <type>des_pos</type>
          <defname>des_pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function used to orient the robot respect to the target.
Args:
    des_pos(Point): desired position to reach</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="176" column="1" bodyfile="scripts/go_to_point.py" bodystart="176" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ac8579665c0fbf665f734476554fac37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.go_straight_ahead</definition>
        <argsstring>(des_pos)</argsstring>
        <name>go_straight_ahead</name>
        <param>
          <type>des_pos</type>
          <defname>des_pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to call in case the robot has to go straigth once it is correctly orriented
Set the linear and angular velocity of the robot according to the distance to the target

Args:
    des_pos(Point): desired position to reach</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="204" column="1" bodyfile="scripts/go_to_point.py" bodystart="204" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a4a406386ca62830c19c93949e923f7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.fix_final_yaw</definition>
        <argsstring>(des_yaw)</argsstring>
        <name>fix_final_yaw</name>
        <param>
          <type>des_yaw</type>
          <defname>des_yaw</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Once the goal&apos;s position is acheived the function orients the robot in order to reach the goal

Args:
    des_yaw(float): the desired yaw</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="243" column="1" bodyfile="scripts/go_to_point.py" bodystart="243" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ac2587220a4ac9c845bc9c5b0b45d5835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.done</definition>
        <argsstring>()</argsstring>
        <name>done</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to call when the target is reached or when it&apos;s cancelled, 
it sets to zero the linear and angualar velocity of the robot in order to stop it</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="273" column="1" bodyfile="scripts/go_to_point.py" bodystart="273" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a2203d17b7e563bee20ed4c988548df45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.go_to_point</definition>
        <argsstring>(goal)</argsstring>
        <name>go_to_point</name>
        <param>
          <type>goal</type>
          <defname>goal</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function that gets the goal position to reach and, based on that, calls the functions to perform the motion of the robot.
It checks if the goal has&apos;t been cancelled; in this case it sets the state_ variable to 3 in order to terminate the process to move 
to reach a certain position.

It also multiplies the linear and angular velocity values sent from the sliders via Velocity custom service message
to the current linear and angular velocity, then publishes the new velocity message to perform the correct motion to reach the goal.

Args:
    goal(Point): the goal to reach

Returns:
     a boolean &apos;True&apos; value to notify that the function has finished</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="288" column="1" bodyfile="scripts/go_to_point.py" bodystart="288" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1abfcc6ba47d138b2b8ee0d51109868803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.sliderVelocity</definition>
        <argsstring>(vel)</argsstring>
        <name>sliderVelocity</name>
        <param>
          <type>vel</type>
          <defname>vel</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Callback to get the linar and angular velocity values sent from the user_interface by Velocity custom service message.
It saves these values in the global variables lin_coef and ang_coef.

Args:
    vel(Velocity): a Velocity custom message</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="333" column="1" bodyfile="scripts/go_to_point.py" bodystart="333" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ab92bd6db1ec323a4d795ed6cb40aebe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>The main function for this script: it initializes the publisher, the subscribers and the SimpleActionServer, in particular

creates a publisher on topic /cmd_vel to publish the robot&apos;s velocity
creates a subscriber on topic /odom to get the current position of the robot
creates a service on topic /set_velocity to get the linear and angular values from the sliders
 creates an action in order to manage the FSM</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="350" column="1" bodyfile="scripts/go_to_point.py" bodystart="350" bodyend="372"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>.. module:: go_to_point
   :platform: Unix
   :synopsis: Node implementing an aglorhitm to move the robot
    
.. moduleauthor:: Alessio Roda alessioroda98@gmail.com

This node drive the robot to the desired position received

Subscribes to:
    /odom 

Publishes to:
    /cmd_vel 

Client: 
     /set_velocity

Service:
    /go_to_point 

 It&apos;s performed as the node that permits the robot to move: it contains all the functions to set the velocity and the orientation of the robot
 based on the target it has to reach via the ActionGoal that was sent from the /state_machine node. In order to do this, when a new target is 
 generated the robot aligns its orienation, then moves to the target with a velocity that is proportional to the velocity set with the sliders
 in the user_interface notebook interface. Once the target is reached, the node sets the target action as succeded, then waits untill a new 
 target is sent.</verbatim> </para>
    </detaileddescription>
    <location file="scripts/go_to_point.py" line="1" column="1"/>
  </compounddef>
</doxygen>
